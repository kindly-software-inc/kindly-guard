name: Docker Security Scan

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'Dockerfile*'
      - '.github/workflows/docker-security-scan.yml'
      - '.github/scripts/scan-docker-image.sh'
  pull_request:
    branches: [ main ]
    paths:
      - 'Dockerfile*'
  schedule:
    # Run weekly security scans
    - cron: '0 0 * * 0'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  scan-distroless:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Docker image for scanning
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.distroless
        push: false
        load: true
        tags: |
          kindly-guard:scan-${{ github.sha }}
          kindly-guard:latest

    - name: Install Trivy
      run: |
        sudo apt-get update
        sudo apt-get install -y wget apt-transport-https gnupg lsb-release
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update
        sudo apt-get install -y trivy

    - name: Install Grype
      run: |
        curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sudo sh -s -- -b /usr/local/bin

    - name: Install Syft
      run: |
        curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sudo sh -s -- -b /usr/local/bin

    - name: Run Security Scan
      run: |
        chmod +x .github/scripts/scan-docker-image.sh
        .github/scripts/scan-docker-image.sh kindly-guard scan-${{ github.sha }}

    - name: Upload Trivy results to GitHub Security
      if: always()
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'
        category: 'trivy-distroless'
      continue-on-error: true

    - name: Upload scan reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: security-scan-reports-${{ github.sha }}
        path: |
          trivy-report.json
          grype-report.json
          sbom-*.json
          security-scan-summary.json
        retention-days: 30

    - name: Comment PR with results
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          let summary = {};
          try {
            summary = JSON.parse(fs.readFileSync('security-scan-summary.json', 'utf8'));
          } catch (e) {
            console.error('Could not read summary:', e);
          }
          
          const status = summary.exit_code === 0 ? '✅ Passed' : '❌ Failed';
          const comment = `## Docker Security Scan Results ${status}

          **Image:** \`kindly-guard:scan-${{ github.sha }}\`
          **Date:** ${new Date().toISOString()}
          
          ### Checks Performed:
          - Non-root user: ${summary.checks_performed?.non_root_user ? '✅' : '❌'}
          - No obvious secrets: ${summary.checks_performed?.no_obvious_secrets ? '✅' : '❌'}
          - Distroless validated: ${summary.checks_performed?.distroless_validated ? '✅' : '❌'}
          
          ### Vulnerability Scanners:
          - Trivy: ${summary.checks_performed?.trivy_available ? '✅ Available' : '⚠️ Not available'}
          - Grype: ${summary.checks_performed?.grype_available ? '✅ Available' : '⚠️ Not available'}
          
          See the [workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for detailed results.`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  scan-standard:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build standard Docker image for scanning
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: false
        load: true
        tags: |
          kindly-guard:standard-scan-${{ github.sha }}

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'kindly-guard:standard-scan-${{ github.sha }}'
        format: 'sarif'
        output: 'trivy-results-standard.sarif'
        severity: 'CRITICAL,HIGH'

    - name: Upload Trivy SARIF results
      if: always()
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results-standard.sarif'
        category: 'trivy-standard'