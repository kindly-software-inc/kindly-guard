name: Performance Regression Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

env:
  CARGO_TERM_COLOR: always

jobs:
  performance-regression:
    name: Performance Regression Detection
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        include:
          - name: "Standard"
            features: ""
          - name: "Enhanced"
            features: "enhanced"
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all history for accurate comparisons
    
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy
    
    - name: Cache cargo dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-perf-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-perf-
    
    - name: Restore performance baselines
      uses: actions/cache@v3
      with:
        path: kindly-guard-server/tests/performance_baselines.json
        key: performance-baselines-${{ matrix.name }}-${{ github.sha }}
        restore-keys: |
          performance-baselines-${{ matrix.name }}-
    
    - name: Run performance tests
      working-directory: ./kindly-guard-server
      run: |
        cargo test --test performance_regression ${{ matrix.features }} -- --nocapture --test-threads=1 | tee performance-results.log
    
    - name: Analyze results
      working-directory: ./kindly-guard-server
      run: |
        # Check for regressions
        if grep -q "Performance regression detected" performance-results.log; then
          echo "::error::Performance regression detected in ${{ matrix.name }} implementation"
          exit 1
        fi
        
        # Extract performance metrics for PR comment
        echo "## Performance Results - ${{ matrix.name }}" > performance-summary.md
        echo "" >> performance-summary.md
        
        # Extract timing information
        grep -E "(Mean:|P50:|P95:|P99:)" performance-results.log | sed 's/^/- /' >> performance-summary.md || true
    
    - name: Upload performance results
      uses: actions/upload-artifact@v3
      with:
        name: performance-results-${{ matrix.name }}
        path: |
          kindly-guard-server/performance-results.log
          kindly-guard-server/performance-summary.md
          kindly-guard-server/tests/performance_baselines.json
    
    - name: Comment PR with results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const summary = fs.readFileSync('kindly-guard-server/performance-summary.md', 'utf8');
          
          const comment = `### Performance Test Results - ${{ matrix.name }}
          
          ${summary}
          
          <details>
          <summary>View detailed logs</summary>
          
          \`\`\`
          ${fs.readFileSync('kindly-guard-server/performance-results.log', 'utf8').slice(-2000)}
          \`\`\`
          </details>`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
    
    - name: Update baselines on main
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      working-directory: ./kindly-guard-server
      run: |
        # Save new baselines for future comparisons
        echo "Updating performance baselines for ${{ matrix.name }}"
        
        # Create artifact for baseline storage
        mkdir -p baseline-artifacts
        cp tests/performance_baselines.json baseline-artifacts/

  performance-comparison:
    name: Compare Performance
    needs: performance-regression
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download all performance results
      uses: actions/download-artifact@v3
      with:
        path: performance-artifacts
    
    - name: Generate comparison report
      run: |
        echo "# Performance Comparison Report" > comparison-report.md
        echo "" >> comparison-report.md
        echo "Comparing performance between implementations:" >> comparison-report.md
        echo "" >> comparison-report.md
        
        # Would include detailed comparison logic here
        
        # Check if enhanced is faster than standard
        if [ -f "performance-artifacts/performance-results-Enhanced/performance-summary.md" ] && \
           [ -f "performance-artifacts/performance-results-Standard/performance-summary.md" ]; then
          echo "âœ… Both implementations tested successfully" >> comparison-report.md
        fi
    
    - name: Comment comparison on PR
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const report = fs.readFileSync('comparison-report.md', 'utf8');
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: report
          });

  alert-on-regression:
    name: Alert on Performance Regression
    needs: performance-regression
    runs-on: ubuntu-latest
    if: failure() && github.ref == 'refs/heads/main'
    
    steps:
    - name: Create issue for regression
      uses: actions/github-script@v6
      with:
        script: |
          const title = `Performance Regression Detected - ${new Date().toISOString().split('T')[0]}`;
          const body = `A performance regression was detected in the main branch.
          
          **Commit:** ${context.sha}
          **Author:** ${context.actor}
          **Workflow Run:** ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}
          
          Please investigate and fix the regression as soon as possible.
          
          ### Next Steps:
          1. Review the workflow logs to identify which operations regressed
          2. Check recent commits for performance-impacting changes
          3. Run local performance tests to reproduce: \`cargo test --test performance_regression\`
          4. Fix the regression and verify with benchmarks
          `;
          
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: title,
            body: body,
            labels: ['performance', 'regression', 'high-priority']
          });