name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - nightly
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy
    
    - name: Cache cargo
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Check formatting
      run: cargo fmt -- --check
      if: matrix.rust == 'stable'
    
    - name: Run clippy
      run: cargo clippy -- -D warnings
      if: matrix.rust == 'stable'
    
    - name: Install cargo-nextest
      uses: taiki-e/install-action@nextest
    
    - name: Build
      run: cargo build --verbose
    
    - name: Run tests
      run: cargo nextest run --all-features --profile ci
    
    - name: Build release
      run: cargo build --release --verbose
      if: matrix.rust == 'stable'

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: rustsec/audit-check@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: llvm-tools-preview
    - name: Install cargo-llvm-cov
      uses: taiki-e/install-action@cargo-llvm-cov
    - name: Generate code coverage
      run: |
        cargo llvm-cov test --all-features --workspace \
          --exclude kindly-guard-core \
          --lcov --output-path lcov.info
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: lcov.info
        fail_ci_if_error: true

  security-check:
    name: Security Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Install security tools
      run: |
        cargo install cargo-geiger
        cargo install cargo-deny
    
    - name: Check for unsafe code
      run: |
        echo "=== Checking for unsafe code usage ==="
        cargo geiger --all-features --output-format GitHubActions
    
    - name: Check dependencies
      run: |
        echo "=== Checking dependencies with cargo-deny ==="
        cargo deny check
    
    - name: Run property tests
      run: |
        echo "=== Running property-based tests ==="
        cd kindly-guard-server
        cargo test --test property_tests -- --nocapture
    
  fuzz-smoke-test:
    name: Fuzz Smoke Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust nightly
      uses: dtolnay/rust-toolchain@nightly
    
    - name: Install cargo-fuzz
      run: cargo install cargo-fuzz
    
    - name: Run short fuzz tests
      run: |
        echo "=== Running 60-second fuzz smoke tests ==="
        ./scripts/fuzz.sh run fuzz_unicode_scanner -t 60 || true
        ./scripts/fuzz.sh run fuzz_injection_detector -t 60 || true
        ./scripts/fuzz.sh run fuzz_mcp_protocol -t 60 || true
        ./scripts/fuzz.sh run fuzz_event_buffer -t 60 || true