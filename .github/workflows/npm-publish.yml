name: Build and Publish NPM Package

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      publish:
        description: 'Publish to NPM'
        required: true
        default: 'false'
        type: boolean

jobs:
  build-binaries:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            platform: linux
            arch: x64
          - os: macos-latest
            target: x86_64-apple-darwin
            platform: darwin
            arch: x64
          - os: macos-latest
            target: aarch64-apple-darwin
            platform: darwin
            arch: arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            platform: win32
            arch: x64

    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo index
      uses: actions/cache@v3
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo build
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Build Release Binaries
      run: |
        cargo build --release --target ${{ matrix.target }}
        cargo build --package kindly-guard-cli --release --target ${{ matrix.target }}
    
    - name: Prepare Binaries
      shell: bash
      run: |
        mkdir -p npm-package/npm/${{ matrix.platform }}-${{ matrix.arch }}
        
        if [ "${{ matrix.platform }}" = "win32" ]; then
          cp target/${{ matrix.target }}/release/kindly-guard.exe npm-package/npm/${{ matrix.platform }}-${{ matrix.arch }}/kindlyguard.exe
          cp target/${{ matrix.target }}/release/kindly-guard-cli.exe npm-package/npm/${{ matrix.platform }}-${{ matrix.arch }}/kindlyguard-cli.exe
        else
          cp target/${{ matrix.target }}/release/kindly-guard npm-package/npm/${{ matrix.platform }}-${{ matrix.arch }}/kindlyguard
          cp target/${{ matrix.target }}/release/kindly-guard-cli npm-package/npm/${{ matrix.platform }}-${{ matrix.arch }}/kindlyguard-cli
          chmod +x npm-package/npm/${{ matrix.platform }}-${{ matrix.arch }}/kindlyguard*
        fi
    
    - name: Create Platform Package
      shell: bash
      working-directory: npm-package/npm/${{ matrix.platform }}-${{ matrix.arch }}
      run: |
        cat > package.json <<EOF
        {
          "name": "@kindlyguard/${{ matrix.platform }}-${{ matrix.arch }}",
          "version": "${{ github.ref_name }}",
          "description": "KindlyGuard binaries for ${{ matrix.platform }}-${{ matrix.arch }}",
          "author": "samduchaine",
          "license": "MIT",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/samduchaine/kindly-guard.git"
          },
          "files": ["kindlyguard*"],
          "os": ["${{ matrix.platform }}"],
          "cpu": ["${{ matrix.arch }}"]
        }
        EOF
        
        echo "# KindlyGuard Binaries for ${{ matrix.platform }}-${{ matrix.arch }}" > README.md
        echo "" >> README.md
        echo "This package contains pre-built KindlyGuard binaries." >> README.md
        echo "Install the main package instead: \`npm install -g kindlyguard\`" >> README.md
    
    - name: Upload Platform Package
      uses: actions/upload-artifact@v3
      with:
        name: platform-package-${{ matrix.platform }}-${{ matrix.arch }}
        path: npm-package/npm/${{ matrix.platform }}-${{ matrix.arch }}

  publish-packages:
    needs: build-binaries
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') || github.event.inputs.publish == 'true'
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '18'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Download all platform packages
      uses: actions/download-artifact@v3
      with:
        path: npm-package/npm
    
    - name: Prepare platform packages
      run: |
        cd npm-package/npm
        for dir in platform-package-*; do
          platform_dir="${dir#platform-package-}"
          mv "$dir" "$platform_dir"
        done
    
    - name: Update main package version
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        cd npm-package
        VERSION="${GITHUB_REF#refs/tags/}"
        npm version "$VERSION" --no-git-tag-version
        
        # Update platform package references
        sed -i "s/\"0.2.0\"/\"$VERSION\"/g" package.json
    
    - name: Publish platform packages
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: |
        cd npm-package/npm
        for platform_dir in */; do
          echo "Publishing @kindlyguard/${platform_dir%/}..."
          cd "$platform_dir"
          npm publish --access public || echo "Failed to publish ${platform_dir%/}"
          cd ..
        done
    
    - name: Publish main package
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: |
        cd npm-package
        npm publish --access public