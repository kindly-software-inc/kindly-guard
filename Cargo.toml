[workspace]
resolver = "2"
members = [
    "kindly-guard-server",
    "kindly-guard-cli",
    "kindly-guard-shield",
    "crates-io-package/kindlyguard",
    "xtask",
    "kindly-tools",
]
exclude = [
    "target",
    "npm-package",
    "demo",
    "claude-ai-kindlyguard",
    "claude-code-kindlyguard",
]

[workspace.package]
version = "0.10.0"
edition = "2021"
rust-version = "1.81"  # MSRV - Minimum Supported Rust Version
authors = ["samduchaine"]
license = "Apache-2.0"
repository = "https://github.com/samduchaine/kindly-guard"
homepage = "https://github.com/samduchaine/kindly-guard"
documentation = "https://docs.rs/kindly-guard"

[workspace.dependencies]
# Async runtime
tokio = { version = "1.42", features = ["full"] }
async-trait = "0.1"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Security
unicode-security = "0.1"
regex = "1.11"
sha2 = "0.10"
base64 = "0.22"
hmac = "0.12"
ed25519-dalek = "2.1"
rand = "0.8"

# Logging and errors
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
anyhow = "1.0"
thiserror = "2.0"

# UI
crossterm = "0.28"
ratatui = "0.29"

# Testing
criterion = { version = "0.5", features = ["html_reports"] }
proptest = "1.6"

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
strip = true
panic = "abort"

[profile.secure]
inherits = "release"
overflow-checks = true
debug-assertions = true

[profile.bench]
inherits = "release"
debug = true

# The profile that 'dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"

# Config for 'dist'
[workspace.metadata.dist]
# The preferred dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.25.1"
# CI backends to support
ci = "github"
# The installers to generate for each app
installers = ["shell", "powershell", "npm", "homebrew", "msi"]
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["aarch64-apple-darwin", "x86_64-apple-darwin", "x86_64-unknown-linux-gnu", "x86_64-unknown-linux-musl", "x86_64-pc-windows-msvc"]
# Publish jobs to run in CI
publish-jobs = ["homebrew"]
# Which actions to run on pull requests
pr-run-mode = "plan"
# Whether to install an updater program
install-updater = true
# The archive format to use for windows builds (defaults .zip)
windows-archive = ".zip"
# The archive format to use for non-windows builds (defaults .tar.xz)
unix-archive = ".tar.gz"
# Extra static files to include in each App (path relative to this Cargo.toml's dir)
include = ["LICENSE", "README.md", "SECURITY.md"]
# Path that installers should place binaries in
install-path = "CARGO_HOME"

# Config for building installers
[workspace.metadata.dist.github-custom-runners]
aarch64-apple-darwin = "macos-14"
x86_64-apple-darwin = "macos-13"
