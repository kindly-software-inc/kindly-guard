# KindlyGuard Supply Chain Security Policy
# This file defines security policies for dependencies using cargo-deny
# Reference: https://embarkstudios.github.io/cargo-deny/

# The graph table configures how the dependency graph is constructed
[graph]
# Include all targets
targets = [
    { triple = "x86_64-unknown-linux-gnu" },
    { triple = "x86_64-pc-windows-msvc" },
    { triple = "x86_64-apple-darwin" },
    { triple = "aarch64-apple-darwin" },
    { triple = "aarch64-unknown-linux-gnu" },
]
# Include all features
all-features = true

# Security Advisory Database
[advisories]
# The path to the advisory database
db-path = "~/.cargo/advisory-db"
# The url(s) of the advisory databases to use
db-urls = ["https://github.com/rustsec/advisory-db"]
# Deny all security vulnerabilities
vulnerability = "deny"
# Deny unmaintained crates
unmaintained = "deny"
# Warn about crates with security notices
notice = "warn"
# Warn about crates that have been yanked from their source registry
yanked = "warn"
# Ignore specific advisories (use sparingly)
ignore = [
    # Example: "RUSTSEC-2020-0001",
]

# License Configuration
[licenses]
# Don't allow software with an unclear license
unlicensed = "deny"
# We want to allow licenses compatible with Apache-2.0
allow = [
    "Apache-2.0",
    "Apache-2.0 WITH LLVM-exception",
    "MIT",
    "MIT-0",
    "BSD-2-Clause",
    "BSD-3-Clause",
    "ISC",
    "Unicode-DFS-2016",
    "CC0-1.0",
    "Unlicense",
    "Zlib",
]
# List of explicitly disallowed licenses
deny = [
    "GPL-2.0",
    "GPL-3.0",
    "AGPL-3.0",
    "LGPL-2.0",
    "LGPL-2.1",
    "LGPL-3.0",
    "MPL-1.1",
    "MPL-2.0",
    "CDDL-1.0",
    "EPL-1.0",
    "EPL-2.0",
]
# Lint level for when a crate is not using a standard license
copyleft = "deny"
# Blanket approval or denial for OSI-approved or FSF Free/Libre licenses
allow-osi-fsf-free = "neither"
# Lint level for when multiple versions of the same license are detected
confidence-threshold = 0.8

# Clarify ambiguous licenses
[[licenses.clarify]]
name = "ring"
# ring has a rather complicated license file, so we clarify it
expression = "MIT AND ISC AND OpenSSL"
license-files = [
    { path = "LICENSE", hash = 0xbd0eed23 }
]

# Banned Crates
[bans]
# Lint level for when multiple versions of the same crate are detected
multiple-versions = "warn"
# Lint level for when a crate marked as 'deny' is detected
deny = [
    # Crates with known security issues
    { name = "openssl", reason = "Use rustls instead for better security" },
    { name = "native-tls", reason = "Use rustls instead for better security" },
    
    # Heavy dependencies (as per CLAUDE.md)
    { name = "reqwest", reason = "Too heavy for KindlyGuard's requirements" },
    { name = "diesel", reason = "Too heavy for KindlyGuard's requirements" },
    { name = "actix-web", reason = "Too heavy for KindlyGuard's requirements" },
    
    # Deprecated or unmaintained
    { name = "time", version = "<0.2", reason = "CVE-2020-26235" },
    { name = "tempdir", reason = "Deprecated, use tempfile instead" },
    { name = "term", reason = "Unmaintained, use crossterm instead" },
]
# Certain crates/versions that will be skipped when doing duplicate detection
skip = [
    # Windows dependencies often have multiple versions
    { name = "windows-sys" },
    { name = "windows-targets" },
]
# Similarly named crates that are allowed to coexist
allow = [
    # Example: { name = "aws-lc-sys", version = "*" },
]

# Source Repository Configuration
[sources]
# Lint level for what to happen when a crate from a crate registry that is not in the allow list is encountered
unknown-registry = "deny"
# Lint level for what to happen when a crate from a git repository that is not in the allow list is encountered
unknown-git = "deny"
# List of allowed registries
allow-registry = ["https://github.com/rust-lang/crates.io-index"]
# List of allowed Git repositories
allow-git = []